@model PowerOfGod.Domain.Entity.Booking.PastorBooking

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutUserLess.cshtml";
}
<br /><br /><br /><br /><br />
<h2>Make Pastor Booking</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.Raw(TempData["Message"])
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Start_date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Start_date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Start_date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TimeStart, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TimeStart, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TimeStart, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TimeEnd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TimeEnd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TimeEnd, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.PastorID, "Pastor", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PastorID", null, htmlAttributes: new { @class = "form-control" })

            @Html.ValidationMessageFor(model => model.PastorID, "", new { @class = "text-danger" })
        </div>
    </div>






    <div class="form-group">
        @Html.LabelFor(model => model.ReasonID, "Booking Reason", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ReasonID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ReasonID, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
    <br /><br /><br />
</div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    @*</div>*@

<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
@section Scripts {


    <script src="~/Scripts/jquery-1.12.4.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")



    <script type="text/javascript">

        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0",
                minDate: new Date(),
                singleMonth: true,
                beforeShowDay: function (t) {
                    var valid = t.getDay() !== 0; //disable sunday
                    var _class = '';
                    // var _tooltip = valid ? '' : 'weekends are disabled';
                    return [valid, _class];



                }
            });

        });


    </script>

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert("@ViewBag.Message");
                };

        </script>


    }
    <script type="text/javascript">
        $(document).ready(function () {
            // Get a list of categories and a list of products of the first category.
            $.getJSON('/PastorBookings/GetPastorTypes', null, function (data) {
                $.each(data, function () {
                    $('#typeofpastor').append('<option value=' +
                        this.TypeOfPastorID + '>' + this.Pastortype + '</option>');
                });
                $.getJSON('/PastorBookings/GetPastor', { TypeOfPastorID: $('#typeofpastor').val() }, function (data) {
                    $.each(data, function () {
                        $('#pastor').append('<option value=' +
                            this.PastorID + '>' + this.PfirstName + '</option>');
                    });
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    alert('Error getting pastors!');
                });
            }).fail(function (jqXHR, textStatus, errorThrown) {
            });

            //// Dropdown list change event.
            alert('Error getting pastor types!');
            $('#typeofpastor').change(function () {
                $('#pastor option').remove();
                $.getJSON('/PastorBookings/GetPastor', { TypeOfPastorID: $('#typeofpastor').val() }, function (data) {
                    $.each(data, function () {
                        $('#pastor').append('<option value=' +
                            this.PastorID + '>' + this.PfirstName + '</option>');
                    });
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    alert('Error getting products!');
                });
            });
    </script>




}

