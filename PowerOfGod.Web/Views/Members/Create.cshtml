@model PowerOfGod.Domain.Entity.Memberss.Members

@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <title>Power Of God Assemble</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!--===============================================================================================-->
    @*<link rel="icon" type="image/png" href="~/CustomLogin/images/icons/favicon.ico" />*@
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="~/CustomLogin/vendor/bootstrap/css/bootstrap.min.css">
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="fonts/font-awesome-4.7.0/css/font-awesome.min.css">
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="fon~/CustomLogin/ts/Linearicons-Free-v1.0.0/icon-font.min.css">
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="~/CustomLogin/vendor/animate/animate.css">
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="~/CustomLogin/vendor/css-hamburgers/hamburgers.min.css">
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="~/CustomLogin/vendor/animsition/css/animsition.min.css">
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="~/CustomLogin/vendor/select2/select2.min.css">
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="~/CustomLogin/vendor/daterangepicker/daterangepicker.css">
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="~/CustomLogin/css/util.css">
    <link rel="stylesheet" type="text/css" href="~/CustomLogin/css/main.css">
    <!--===============================================================================================-->
</head>
<body>
    @using (Html.BeginForm("Create", "Members", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="limiter">
            <div class="container-login100">
                <div class="wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55">
                    <form class="login100-form validate-form flex-sb flex-w">
                        <span class="login100-form-title p-b-32">
                            Member Registration
                        </span>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <span class="txt1 p-b-11">
                            First Name
                        </span>
                        <div class="wrap-input100 validate-input m-b-36" data-validate="Username is required">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            <span class="focus-input100"></span>
                        </div>

                        <span class="txt1 p-b-11">
                            Last Name
                        </span>
                        <div class="wrap-input100 validate-input m-b-36" data-validate="Username is required">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            <span class="focus-input100"></span>
                        </div>

                        <span class="txt1 p-b-11">
                            ID Number
                        </span>
                        <div class="wrap-input100 validate-input m-b-36" data-validate="Username is required">
                            @Html.EditorFor(model => model.IDNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IDNumber, "", new { @class = "text-danger" })
                            <span class="focus-input100"></span>
                        </div>

                        <span class="txt1 p-b-11">
                            Gender
                        </span>
                        @*<div class="wrap-input100 validate-input m-b-36" data-validate="Username is required">*@
                        @*<div class="col-md-10">*@
                        @{
                            List<SelectListItem> gender = new List<SelectListItem>();

                            gender.Add(new SelectListItem { Text = "Male", Value = "Male" });
                            gender.Add(new SelectListItem { Text = "Female", Value = "Female" });
                        }
                        @Html.DropDownListFor(m => m.gender, gender, "Select...")
                        @*@Html.ValidationMessageFor(model => model.gender)*@
                        @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                        @*</div>*@
                        <span class="focus-input100"></span>
                        <br /><br />
                        @*</div>*@

                        <span class="txt1 p-b-11">
                            Phone Number
                        </span>
                        <div class="wrap-input100 validate-input m-b-36" data-validate="Username is required">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                            <span class="focus-input100"></span>
                        </div>

                        <span class="txt1 p-b-11">
                            Email
                        </span>
                        <div class="wrap-input100 validate-input m-b-36" data-validate="Username is required">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            <span class="focus-input100"></span>
                        </div>

                        <span class="txt1 p-b-11">
                            Address
                        </span>
                        <div class="wrap-input100 validate-input m-b-36" data-validate="Username is required">
                            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                            <span class="focus-input100"></span>
                        </div>

                        <span class="txt1 p-b-11">
                            Picture
                        </span>
                        <input type="file" name="img_upload" id="img_upload" /><br />
                        @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })                      
                        <span class="focus-input100"></span>
                        <br /><br />
                        @Html.ActionLink("Go to Login", "Login", "Account")/
                        @Html.ActionLink("Back to Home", "Index", "Home")
                        <br /><br />
                        <div class="container-login100-form-btn">
                            @*<button type="submit" class="btn btn-primary submit mb-4">Sign In</button>*@
                            <button type="submit" class="login100-form-btn" value="Create">Register</button>
                        </div>

                    </form>
                </div>
            </div>
        </div>
    }

    <div id="dropDownSelect1"></div>

    <!--===============================================================================================-->
    <script src="~/CustomLogin/vendor/jquery/jquery-3.2.1.min.js"></script>
    <!--===============================================================================================-->
    <script src="~/CustomLogin/vendor/animsition/js/animsition.min.js"></script>
    <!--===============================================================================================-->
    <script src="~/CustomLogin/vendor/bootstrap/js/popper.js"></script>
    <script src="~/CustomLogin/vendor/bootstrap/js/bootstrap.min.js"></script>
    <!--===============================================================================================-->
    <script src="~/CustomLogin/vendor/select2/select2.min.js"></script>
    <!--===============================================================================================-->
    <script src="~/CustomLogin/vendor/daterangepicker/moment.min.js"></script>
    <script src="~/CustomLogin/vendor/daterangepicker/daterangepicker.js"></script>
    <!--===============================================================================================-->
    <script src="~/CustomLogin/vendor/countdowntime/countdowntime.js"></script>
    <!--===============================================================================================-->
    <script src="~/CustomLogin/js/main.js"></script>

</body>
</html>

