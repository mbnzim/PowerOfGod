
@model PowerOfGod.ViewModel.BookingAproval.ApprovalVenueVM
@if (User.IsInRole("SupperAdmin"))
{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_supadmin.cshtml";
}
else if (User.IsInRole("Administrator"))
{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_admin.cshtml";
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" href="/resources/demos/style.css">

<div style="margin-bottom:10%;"></div>

<div style="margin-bottom:10%;"></div>
<h3 class="page-header"><i class="fa fa-list-alt"></i>Booking Approvel</h3>
<ol class="breadcrumb">
    <li><i class="fa fa-home"></i><a href="#">Home</a></li>
    <li><i class="fa fa-desktop"></i>Approvel</li>
</ol>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.VenueBookingID)
        @*<div class="form-group">
                @Html.LabelFor(model => model.LeaveID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LeaveID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LeaveID, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.Venue_Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.Venue_Status, "Approved") @Html.Label("Approved")
                @Html.RadioButtonFor(model => model.Venue_Status, "Rejected") @Html.Label("Rejected")
                @Html.ValidationMessageFor(model => model.Venue_Status, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.updateBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.updateBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.updateBy, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
</div>



