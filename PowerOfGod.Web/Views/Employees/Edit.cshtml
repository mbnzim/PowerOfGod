@model PowerOfGod.Domain.Entity.Employee.Employees
@if (User.IsInRole("SupperAdmin"))
{
    Layout = "~/Views/Shared/_supadmin.cshtml";
}
else if (User.IsInRole("Administrator"))
{
    Layout = "~/Views/Shared/_admin.cshtml";
}

@if (User.IsInRole("SupperAdmin"))
{
    Layout = "~/Views/Shared/_supadmin.cshtml";
}
else if (User.IsInRole("Administrator"))
{
    Layout = "~/Views/Shared/_admin.cshtml";
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" href="/resources/demos/style.css">

<div style="margin-bottom:10%;"></div>

@using (Html.BeginForm("Edit", "Employees", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h3 class="page-header"><i class="fa fa-list-alt"></i>Add Employee</h3>
        <ol class="breadcrumb">
            <li><i class="fa fa-home"></i><a href="#">Home</a></li>
            <li><i class="fa fa-desktop"></i>Employees</li>
            <li><i class="fa fa-list-alt"></i>Add Employee</li>
        </ol>
    </div>
    <hr />
    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        @if (@TempData["Success"] != null)
        {
            <div class="alert alert-success">@TempData["Success"]</div>
        }
        @if (@ViewBag.Message != null)
        {
            <div class="alert alert-danger">@ViewBag.Message</div>
        }
        <div style="margin-bottom:4%;"></div>

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.EmpNum, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmpNum, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmpNum, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IDNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IDNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IDNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        List<SelectListItem> gender = new List<SelectListItem>();

                        gender.Add(new SelectListItem { Text = "Male", Value = "Male" });
                        gender.Add(new SelectListItem { Text = "Female", Value = "Female" });
                    }
                    @Html.DropDownListFor(m => m.gender, gender, "Select...")
                    @Html.ValidationMessageFor(model => model.gender)
                    @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.UserRole, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownList("UserRole", new List<SelectListItem>
                    {
                        new SelectListItem{Text="Administrator", Value="Administrator"},
                        new SelectListItem{Text="Financial-Manager", Value="Financial-Manager"},
                        new SelectListItem{Text="General-Stuff", Value="General-Stuff"},
                        new SelectListItem{Text="Member", Value="Member"}
                    },"Select...")

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.mobile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.typeCode, "typeCode", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("typeCode", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.typeCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="UploadImage" id="UploadImage" />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
</div>

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
<script>
    $(function () {
        $("#hireDate").datepicker();
    });
</script>
